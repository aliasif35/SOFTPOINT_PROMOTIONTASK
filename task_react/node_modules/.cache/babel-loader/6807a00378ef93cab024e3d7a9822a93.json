{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from \"react\";\nimport DraggableChildComponent from \"../draggableChildren/draggableChildren\";\n\nclass DraggableComponent extends Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"state\", {\n      divs: [],\n      currentDiv: null,\n      toDiv: null\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.setState({\n        divs: this.props.children\n      });\n    });\n\n    _defineProperty(this, \"insertElementBefore\", () => {\n      let divs = [...this.state.divs];\n      let currentDiv = this.state.currentDiv;\n      let toDiv = this.state.toDiv;\n      let currentEle;\n\n      if (currentDiv !== toDiv) {\n        currentEle = { ...divs[currentDiv]\n        };\n        divs = divs.filter((val, idx) => {\n          return idx !== currentDiv;\n        });\n        divs.splice(toDiv, 0, currentEle); // This is a hack - Initialize the state as blank and then reset the state\n        // With only 1 setState, the entire component doesnot get rerendered.\n\n        this.setState({\n          divs: [],\n          currentDiv: null,\n          toDiv: null\n        }, () => {\n          this.setState({\n            divs\n          });\n        });\n      }\n\n      if (this.props?.onPosChange) this.props.onPosChange(currentDiv, toDiv, currentEle);\n    });\n\n    _defineProperty(this, \"dragStart\", idx => {\n      this.setState({\n        currentDiv: idx\n      });\n    });\n\n    _defineProperty(this, \"dragEnter\", idx => {\n      this.setState({\n        toDiv: idx\n      });\n    });\n\n    _defineProperty(this, \"dragDrop\", () => {\n      this.insertElementBefore();\n    });\n  }\n\n  render() {\n    let ele = [];\n\n    for (let i = 0; i < this.state.divs.length; i++) {\n      ele.push( /*#__PURE__*/React.createElement(DraggableChildComponent, {\n        dragStart: () => this.dragStart(i),\n        dragEnter: () => this.dragEnter(i),\n        dragEnd: this.dragDrop,\n        key: i\n      }, this.state.divs[i]));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, ele);\n  }\n\n}\n\nexport default DraggableComponent;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","DraggableChildComponent","DraggableComponent","constructor","divs","currentDiv","toDiv","setState","props","children","state","currentEle","filter","val","idx","splice","onPosChange","insertElementBefore","render","ele","i","length","push","createElement","dragStart","dragEnter","dragEnd","dragDrop","Fragment"],"sources":["D:/SoftPoint/promotion_task/task_react/node_modules/react-drag-reorder/dist/components/draggable/draggable.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport DraggableChildComponent from \"../draggableChildren/draggableChildren\";\n\nclass DraggableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      divs: [],\n      currentDiv: null,\n      toDiv: null\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.setState({\n        divs: this.props.children\n      });\n    });\n\n    _defineProperty(this, \"insertElementBefore\", () => {\n      let divs = [...this.state.divs];\n      let currentDiv = this.state.currentDiv;\n      let toDiv = this.state.toDiv;\n      let currentEle;\n\n      if (currentDiv !== toDiv) {\n        currentEle = { ...divs[currentDiv]\n        };\n        divs = divs.filter((val, idx) => {\n          return idx !== currentDiv;\n        });\n        divs.splice(toDiv, 0, currentEle); // This is a hack - Initialize the state as blank and then reset the state\n        // With only 1 setState, the entire component doesnot get rerendered.\n\n        this.setState({\n          divs: [],\n          currentDiv: null,\n          toDiv: null\n        }, () => {\n          this.setState({\n            divs\n          });\n        });\n      }\n\n      if (this.props?.onPosChange) this.props.onPosChange(currentDiv, toDiv, currentEle);\n    });\n\n    _defineProperty(this, \"dragStart\", idx => {\n      this.setState({\n        currentDiv: idx\n      });\n    });\n\n    _defineProperty(this, \"dragEnter\", idx => {\n      this.setState({\n        toDiv: idx\n      });\n    });\n\n    _defineProperty(this, \"dragDrop\", () => {\n      this.insertElementBefore();\n    });\n  }\n\n  render() {\n    let ele = [];\n\n    for (let i = 0; i < this.state.divs.length; i++) {\n      ele.push( /*#__PURE__*/React.createElement(DraggableChildComponent, {\n        dragStart: () => this.dragStart(i),\n        dragEnter: () => this.dragEnter(i),\n        dragEnd: this.dragDrop,\n        key: i\n      }, this.state.divs[i]));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, ele);\n  }\n\n}\n\nexport default DraggableComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}